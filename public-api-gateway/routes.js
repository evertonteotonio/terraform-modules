const fs = require('fs')
const path = require('path')

const makeId = (path, method = null) => `${method ? method+'_' : ''}${path.toLowerCase().substr(1).replace('/','_').replace(':', '-')}`

const resource = (name, path_part, parent_id = '${aws_api_gateway_rest_api.main.root_resource_id}') => `
resource "aws_api_gateway_resource" "${name}" {
  rest_api_id = "\${aws_api_gateway_rest_api.main.id}"
  parent_id   = "${parent_id}"
  path_part   = "${path_part.substr(0,1) === ':' ? '{'+path_part.substr(1)+'}' : path_part}"
}
`

const endpoint = (name, id, method, src) => `
module "${name}" {
  source             = "./modules/endpoint"
  name               = "${name}"
  rest_api_id        = "\${aws_api_gateway_rest_api.main.id}"
  resource_id        = "\${aws_api_gateway_resource.${id}.id}"
  http_method        = "${method}"
  stage_name         = "\${aws_api_gateway_deployment.main.stage_name}"
  resource_path      = "\${aws_api_gateway_resource.${id}.path}"
  source_dir         = "${src}"
}
`

const deployment = (deps) => `
resource "aws_api_gateway_deployment" "main" {
  depends_on = ["${deps.join('","')}"]
  rest_api_id = "\${aws_api_gateway_rest_api.main.id}"
  stage_name = "\${local.stage_name}"
}`

const resources = {}

const buildResources = (input, path) => {
  const parts = path.substr(1).split('/')
  const paths = []
  let last_id = null
  while(parts.length) {
    paths.push(parts.shift())
    const id = makeId(`/${paths.join('/')}`)
    //console.log(id, paths[paths.length-1])
    if (resources[id]) {
      last_id = id
      continue;
    }

    if (paths.length === 1) {
      output += resource(id, paths[paths.length-1])
    } else {
      output += resource(id, paths[paths.length-1], `\${aws_api_gateway_resource.${last_id}.id}`)
    }

    resources[id] = true

    last_id = id
  }

  return last_id
}

// Run
process.argv.shift()
const [self_path, src_dir, input_path] = process.argv

const cwd = path.dirname(self_path)

const input = JSON.parse(fs.readFileSync(`${input_path}`))
let output = '# ***** Generated by data.external.endpoints *****'

const deps = []
//fs.writeFileSync('./debugi.json', JSON.stringify(input), 'utf8')
input.forEach((route) => {
  const name = makeId(route.path, route.method)
  const id = buildResources(input.args, route.path)
  output += endpoint(name, id, route.method, path.join(src_dir, route.src))
  deps.push(`module.${name}`)
})

//output += deployment(deps)

fs.writeFileSync(`${cwd}/routes.tf`, output, 'utf8')

console.log({})
